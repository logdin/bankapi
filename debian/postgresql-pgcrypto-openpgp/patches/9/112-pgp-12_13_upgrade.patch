diff --git a/Makefile b/Makefile
index fec848e..33b7d90 100644
--- a/Makefile
+++ b/Makefile
@@ -26,7 +26,7 @@ MODULE_big	= pgcrypto_openpgp
 OBJS		= $(SRCS:.c=.o)
 
 EXTENSION = pgcrypto_openpgp
-DATA = pgcrypto_openpgp--1.2.sql
+DATA = pgcrypto_openpgp--1.2--1.3.sql pgcrypto_openpgp--1.3.sql
 
 REGRESS = init md5 sha1 hmac-md5 hmac-sha1 blowfish rijndael \
 	$(CF_TESTS) \
diff --git a/pgcrypto_openpgp--1.2--1.3.sql b/pgcrypto_openpgp--1.2--1.3.sql
new file mode 100644
index 0000000..f8ecdb3
--- /dev/null
+++ b/pgcrypto_openpgp--1.2--1.3.sql
@@ -0,0 +1,20 @@
+/* pgcrypto_openpgp/pgcrypto_openpgp--1.2--1.3.sql */
+
+-- complain if script is sourced in psql, rather than via CREATE EXTENSION
+\echo Use "ALTER EXTENSION pgcrypto UPDATE TO '1.3'" to load this file. \quit
+
+--
+-- pgcrypto_armor_headers
+--
+
+CREATE FUNCTION pgp_armor_headers(text, key OUT text, value OUT text)
+RETURNS SETOF record
+AS 'MODULE_PATHNAME', 'pgp_armor_headers'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE OR REPLACE FUNCTION pgp_armor_header(text, text)
+RETURNS text
+AS $$
+SELECT string_agg(h.value, '') FROM pgp_armor_headers($1) h WHERE h.key = $2
+$$
+LANGUAGE sql IMMUTABLE STRICT;
diff --git a/pgcrypto_openpgp--1.2.sql b/pgcrypto_openpgp--1.2.sql
deleted file mode 100644
index c6124a2..0000000
--- a/pgcrypto_openpgp--1.2.sql
+++ /dev/null
@@ -1,447 +0,0 @@
-/* pgcrypto_openpgp/pgcrypto_openpgp--1.2.sql */
-
--- complain if script is sourced in psql, rather than via CREATE EXTENSION
-\echo Use "CREATE EXTENSION pgcrypto_openpgp" to load this file. \quit
-
-CREATE FUNCTION digest(text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_digest'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION digest(bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_digest'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION hmac(text, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_hmac'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION hmac(bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_hmac'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION crypt(text, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pg_crypt'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION gen_salt(text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pg_gen_salt'
-LANGUAGE C VOLATILE STRICT;
-
-CREATE FUNCTION gen_salt(text, int4)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pg_gen_salt_rounds'
-LANGUAGE C VOLATILE STRICT;
-
-CREATE FUNCTION encrypt(bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_encrypt'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION decrypt(bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_decrypt'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION encrypt_iv(bytea, bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_encrypt_iv'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION decrypt_iv(bytea, bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_decrypt_iv'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION gen_random_bytes(int4)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_random_bytes'
-LANGUAGE C VOLATILE STRICT;
-
---
--- pgp_sym_encrypt(data, key)
---
-CREATE FUNCTION pgp_sym_encrypt(text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_sym_encrypt_bytea(bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_sym_encrypt(data, key, args)
---
-CREATE FUNCTION pgp_sym_encrypt(text, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_sym_encrypt_bytea(bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_sym_decrypt(data, key)
---
-CREATE FUNCTION pgp_sym_decrypt(bytea, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_sym_decrypt_bytea(bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_sym_decrypt(data, key, args)
---
-CREATE FUNCTION pgp_sym_decrypt(bytea, text, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_sym_decrypt_bytea(bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_encrypt(data, key)
---
-CREATE FUNCTION pgp_pub_encrypt(text, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_pub_encrypt_bytea(bytea, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_pub_encrypt(data, key, args)
---
-CREATE FUNCTION pgp_pub_encrypt(text, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_pub_encrypt_bytea(bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_pub_decrypt(data, key)
---
-CREATE FUNCTION pgp_pub_decrypt(bytea, bytea)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_decrypt(data, key, psw)
---
-CREATE FUNCTION pgp_pub_decrypt(bytea, bytea, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_decrypt(data, key, psw, arg)
---
-CREATE FUNCTION pgp_pub_decrypt(bytea, bytea, text, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- PGP key ID
---
-CREATE FUNCTION pgp_key_id(bytea)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_key_id_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp armor
---
-CREATE FUNCTION armor(bytea)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pg_armor'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION dearmor(text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pg_dearmor'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgcrypto_armor_headers
---
-
-CREATE FUNCTION armor(bytea, text[], text[])
-RETURNS text
-AS 'MODULE_PATHNAME', 'pg_armor'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_armor_headers(text, key OUT text, value OUT text)
-RETURNS SETOF record
-AS 'MODULE_PATHNAME', 'pgp_armor_headers'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_armor_header(text, text)
-RETURNS text
-AS $$
-SELECT string_agg(h.value, '') FROM pgp_armor_headers($1) h WHERE h.key = $2
-$$
-LANGUAGE sql IMMUTABLE STRICT;
-
---
--- pgcrypto_signatures
---
-
---
--- pgp_sym_encrypt_sign(data, key, sigkey)
---
-CREATE FUNCTION pgp_sym_encrypt_sign(text, text, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_sym_encrypt_sign_bytea(bytea, text, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_sym_encrypt_sign(data, key, sigkey, psw)
---
-CREATE FUNCTION pgp_sym_encrypt_sign(text, text, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_sym_encrypt_sign_bytea(bytea, text, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_sym_encrypt_sign(data, key, sigkey, psw, args)
---
-CREATE FUNCTION pgp_sym_encrypt_sign(text, text, bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_sym_encrypt_sign_bytea(bytea, text, bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_sym_decrypt_verify(data, key, sigkey)
---
-CREATE FUNCTION pgp_sym_decrypt_verify(bytea, text, bytea)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_sym_decrypt_verify_bytea(bytea, text, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_sym_decrypt_verify(data, key, sigkey, psw)
---
-CREATE FUNCTION pgp_sym_decrypt_verify(bytea, text, bytea, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_sym_decrypt_verify_bytea(bytea, text, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_sym_decrypt_verify(data, key, sigkey, psw, args)
---
-CREATE FUNCTION pgp_sym_decrypt_verify(bytea, text, bytea, text, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_sym_decrypt_verify_bytea(bytea, text, bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_encrypt_sign(data, key, sigkey)
---
-CREATE FUNCTION pgp_pub_encrypt_sign(text, bytea, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_pub_encrypt_sign_bytea(bytea, bytea, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_pub_encrypt_sign(data, key, sigkey, psw)
---
-CREATE FUNCTION pgp_pub_encrypt_sign(text, bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_pub_encrypt_sign_bytea(bytea, bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_pub_encrypt_sign(data, key, sigkey, psw, args)
---
-CREATE FUNCTION pgp_pub_encrypt_sign(text, bytea, bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_text'
-LANGUAGE C STRICT;
-
-CREATE FUNCTION pgp_pub_encrypt_sign_bytea(bytea, bytea, bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_bytea'
-LANGUAGE C STRICT;
-
---
--- pgp_pub_decrypt_verify(data, key, sigkey)
---
-CREATE FUNCTION pgp_pub_decrypt_verify(bytea, bytea, bytea)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_pub_decrypt_verify_bytea(bytea, bytea, bytea)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_decrypt_verify(data, key, sigkey, psw)
---
-CREATE FUNCTION pgp_pub_decrypt_verify(bytea, bytea, bytea, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_pub_decrypt_verify_bytea(bytea, bytea, bytea, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_decrypt_verify(data, key, sigkey, psw, arg)
---
-CREATE FUNCTION pgp_pub_decrypt_verify(bytea, bytea, bytea, text, text)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_text'
-LANGUAGE C IMMUTABLE STRICT;
-
-CREATE FUNCTION pgp_pub_decrypt_verify_bytea(bytea, bytea, bytea, text, text)
-RETURNS bytea
-AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_bytea'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_main_key_id(key)
---
-CREATE FUNCTION pgp_main_key_id(bytea)
-RETURNS text
-AS 'MODULE_PATHNAME', 'pgp_main_key_id_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_sym_signatures(data, key)
---
-CREATE FUNCTION pgp_sym_signatures(bytea, text)
-RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
-AS 'MODULE_PATHNAME', 'pgp_sym_signatures_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_sym_signatures(data, key, details)
---
-CREATE FUNCTION pgp_sym_signatures(bytea, text, boolean)
-RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
-AS 'MODULE_PATHNAME', 'pgp_sym_signatures_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_sym_signatures(data, key, details, args)
---
-CREATE FUNCTION pgp_sym_signatures(bytea, text, boolean, text)
-RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
-AS 'MODULE_PATHNAME', 'pgp_sym_signatures_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_signatures(data, key)
---
-CREATE FUNCTION pgp_pub_signatures(bytea, bytea)
-RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
-AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_signatures(data, key, psw)
---
-CREATE FUNCTION pgp_pub_signatures(bytea, bytea, text)
-RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
-AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_signatures(data, key, psw, details)
---
-CREATE FUNCTION pgp_pub_signatures(bytea, bytea, text, boolean)
-RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
-AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
-LANGUAGE C IMMUTABLE STRICT;
-
---
--- pgp_pub_signatures(data, key, psw, details, args)
---
-CREATE FUNCTION pgp_pub_signatures(bytea, bytea, text, boolean, text)
-RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
-AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
-LANGUAGE C IMMUTABLE STRICT;
diff --git a/pgcrypto_openpgp--1.3.sql b/pgcrypto_openpgp--1.3.sql
new file mode 100644
index 0000000..a361792
--- /dev/null
+++ b/pgcrypto_openpgp--1.3.sql
@@ -0,0 +1,447 @@
+/* pgcrypto_openpgp/pgcrypto_openpgp--1.3.sql */
+
+-- complain if script is sourced in psql, rather than via CREATE EXTENSION
+\echo Use "CREATE EXTENSION pgcrypto_openpgp" to load this file. \quit
+
+CREATE FUNCTION digest(text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_digest'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION digest(bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_digest'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION hmac(text, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_hmac'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION hmac(bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_hmac'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION crypt(text, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pg_crypt'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION gen_salt(text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pg_gen_salt'
+LANGUAGE C VOLATILE STRICT;
+
+CREATE FUNCTION gen_salt(text, int4)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pg_gen_salt_rounds'
+LANGUAGE C VOLATILE STRICT;
+
+CREATE FUNCTION encrypt(bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_encrypt'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION decrypt(bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_decrypt'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION encrypt_iv(bytea, bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_encrypt_iv'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION decrypt_iv(bytea, bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_decrypt_iv'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION gen_random_bytes(int4)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_random_bytes'
+LANGUAGE C VOLATILE STRICT;
+
+--
+-- pgp_sym_encrypt(data, key)
+--
+CREATE FUNCTION pgp_sym_encrypt(text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_sym_encrypt_bytea(bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_sym_encrypt(data, key, args)
+--
+CREATE FUNCTION pgp_sym_encrypt(text, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_sym_encrypt_bytea(bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_sym_decrypt(data, key)
+--
+CREATE FUNCTION pgp_sym_decrypt(bytea, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_sym_decrypt_bytea(bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_sym_decrypt(data, key, args)
+--
+CREATE FUNCTION pgp_sym_decrypt(bytea, text, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_sym_decrypt_bytea(bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_encrypt(data, key)
+--
+CREATE FUNCTION pgp_pub_encrypt(text, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_pub_encrypt_bytea(bytea, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_pub_encrypt(data, key, args)
+--
+CREATE FUNCTION pgp_pub_encrypt(text, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_pub_encrypt_bytea(bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_pub_decrypt(data, key)
+--
+CREATE FUNCTION pgp_pub_decrypt(bytea, bytea)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_decrypt(data, key, psw)
+--
+CREATE FUNCTION pgp_pub_decrypt(bytea, bytea, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_decrypt(data, key, psw, arg)
+--
+CREATE FUNCTION pgp_pub_decrypt(bytea, bytea, text, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- PGP key ID
+--
+CREATE FUNCTION pgp_key_id(bytea)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_key_id_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp armor
+--
+CREATE FUNCTION armor(bytea)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pg_armor'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION dearmor(text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pg_dearmor'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgcrypto_armor_headers
+--
+
+CREATE FUNCTION armor(bytea, text[], text[])
+RETURNS text
+AS 'MODULE_PATHNAME', 'pg_armor'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_armor_headers(text, key OUT text, value OUT text)
+RETURNS SETOF record
+AS 'MODULE_PATHNAME', 'pgp_armor_headers'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_armor_header(text, text)
+RETURNS text
+AS $$
+SELECT string_agg(h.value, '') FROM pgp_armor_headers($1) h WHERE h.key = $2
+$$
+LANGUAGE sql IMMUTABLE STRICT;
+
+--
+-- pgcrypto_signatures
+--
+
+--
+-- pgp_sym_encrypt_sign(data, key, sigkey)
+--
+CREATE FUNCTION pgp_sym_encrypt_sign(text, text, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_sym_encrypt_sign_bytea(bytea, text, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_sym_encrypt_sign(data, key, sigkey, psw)
+--
+CREATE FUNCTION pgp_sym_encrypt_sign(text, text, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_sym_encrypt_sign_bytea(bytea, text, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_sym_encrypt_sign(data, key, sigkey, psw, args)
+--
+CREATE FUNCTION pgp_sym_encrypt_sign(text, text, bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_sym_encrypt_sign_bytea(bytea, text, bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_encrypt_sign_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_sym_decrypt_verify(data, key, sigkey)
+--
+CREATE FUNCTION pgp_sym_decrypt_verify(bytea, text, bytea)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_sym_decrypt_verify_bytea(bytea, text, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_sym_decrypt_verify(data, key, sigkey, psw)
+--
+CREATE FUNCTION pgp_sym_decrypt_verify(bytea, text, bytea, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_sym_decrypt_verify_bytea(bytea, text, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_sym_decrypt_verify(data, key, sigkey, psw, args)
+--
+CREATE FUNCTION pgp_sym_decrypt_verify(bytea, text, bytea, text, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_sym_decrypt_verify_bytea(bytea, text, bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_sym_decrypt_verify_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_encrypt_sign(data, key, sigkey)
+--
+CREATE FUNCTION pgp_pub_encrypt_sign(text, bytea, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_pub_encrypt_sign_bytea(bytea, bytea, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_pub_encrypt_sign(data, key, sigkey, psw)
+--
+CREATE FUNCTION pgp_pub_encrypt_sign(text, bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_pub_encrypt_sign_bytea(bytea, bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_pub_encrypt_sign(data, key, sigkey, psw, args)
+--
+CREATE FUNCTION pgp_pub_encrypt_sign(text, bytea, bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_text'
+LANGUAGE C STRICT;
+
+CREATE FUNCTION pgp_pub_encrypt_sign_bytea(bytea, bytea, bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_encrypt_sign_bytea'
+LANGUAGE C STRICT;
+
+--
+-- pgp_pub_decrypt_verify(data, key, sigkey)
+--
+CREATE FUNCTION pgp_pub_decrypt_verify(bytea, bytea, bytea)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_pub_decrypt_verify_bytea(bytea, bytea, bytea)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_decrypt_verify(data, key, sigkey, psw)
+--
+CREATE FUNCTION pgp_pub_decrypt_verify(bytea, bytea, bytea, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_pub_decrypt_verify_bytea(bytea, bytea, bytea, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_decrypt_verify(data, key, sigkey, psw, arg)
+--
+CREATE FUNCTION pgp_pub_decrypt_verify(bytea, bytea, bytea, text, text)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_text'
+LANGUAGE C IMMUTABLE STRICT;
+
+CREATE FUNCTION pgp_pub_decrypt_verify_bytea(bytea, bytea, bytea, text, text)
+RETURNS bytea
+AS 'MODULE_PATHNAME', 'pgp_pub_decrypt_verify_bytea'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_main_key_id(key)
+--
+CREATE FUNCTION pgp_main_key_id(bytea)
+RETURNS text
+AS 'MODULE_PATHNAME', 'pgp_main_key_id_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_sym_signatures(data, key)
+--
+CREATE FUNCTION pgp_sym_signatures(bytea, text)
+RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
+AS 'MODULE_PATHNAME', 'pgp_sym_signatures_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_sym_signatures(data, key, details)
+--
+CREATE FUNCTION pgp_sym_signatures(bytea, text, boolean)
+RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
+AS 'MODULE_PATHNAME', 'pgp_sym_signatures_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_sym_signatures(data, key, details, args)
+--
+CREATE FUNCTION pgp_sym_signatures(bytea, text, boolean, text)
+RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
+AS 'MODULE_PATHNAME', 'pgp_sym_signatures_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_signatures(data, key)
+--
+CREATE FUNCTION pgp_pub_signatures(bytea, bytea)
+RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
+AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_signatures(data, key, psw)
+--
+CREATE FUNCTION pgp_pub_signatures(bytea, bytea, text)
+RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
+AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_signatures(data, key, psw, details)
+--
+CREATE FUNCTION pgp_pub_signatures(bytea, bytea, text, boolean)
+RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
+AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
+LANGUAGE C IMMUTABLE STRICT;
+
+--
+-- pgp_pub_signatures(data, key, psw, details, args)
+--
+CREATE FUNCTION pgp_pub_signatures(bytea, bytea, text, boolean, text)
+RETURNS TABLE (keyid text, digest text, pubkeyalgo text, creation_time timestamptz)
+AS 'MODULE_PATHNAME', 'pgp_pub_signatures_w'
+LANGUAGE C IMMUTABLE STRICT;
diff --git a/pgcrypto_openpgp.control b/pgcrypto_openpgp.control
index 48fe8ce..5f4a75a 100644
--- a/pgcrypto_openpgp.control
+++ b/pgcrypto_openpgp.control
@@ -1,5 +1,5 @@
 # pgcrypto_openpgp extension
 comment = 'cryptographic functions'
-default_version = '1.2'
+default_version = '1.3'
 module_pathname = '$libdir/pgcrypto_openpgp'
 relocatable = true
